#!/usr/bin/env sh

# SOURCE: https://github.com/bderenzo/tinystatus
# Usage: ./generate-status-page > index.html

# Configuration variables
TITLE="Status | SpencerLepine.com"
HEADER="Status - spencerlepine.com"
CHECKS_FILE="${1:-config.csv}"
INCIDENTS_FILE="${2:-incidents.txt}"
OUTAGE_RC=false
TIMEOUT=10
USER_AGENT="User-Agent: Mozilla/5.0 (X11; Linux x86_64; Debian) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
TMP_DIR="$(mktemp -d)"

command_exists(){
    if ! command -v "${1}" >/dev/null 2>&1; then
        echo >&2 "Error: ${1} missing. Please install it"
        exit 1
    fi
}

get_element(){
    echo "${2}" | awk -v col="${1}" -F',' '{gsub(/^[ \t]+|[ \t]+$/, "", $col); print $col}'
}

check(){
    check="${1}"
    host="${2}"
    name="${3}"
    expected_rc="${4}"
    id="${5}"

    ipversion="$(echo "${check}" | grep -o '[46]$')"
    case "${check}" in
        http*)
            rc="$(curl -${ipversion}sSkLo /dev/null -H "${USER_AGENT}" -m "${TIMEOUT}" -w "%{http_code}" "${host}" 2> "${TMP_DIR}/${id}.ko.info")"
            if [ -s "${TMP_DIR}/${id}.ko.info" ]; then
                sed -e 's,curl: ([0-9]*) ,,' -i "${TMP_DIR}/${id}.ko.info"
            else
                echo "Status code: ${rc}, expected: ${expected_rc}" > "${TMP_DIR}/${id}.ko.info"
            fi;;
        ping*)
            ping -${ipversion}W "${TIMEOUT}" -c 1 "${host}" >/dev/null 2>&1
            rc=$?
            [ "${rc}" -ne "${expected_rc}" ] && echo 'Host unreachable' > "${TMP_DIR}/${id}.ko.info";;
        port*)
            error="$(nc -${ipversion}w "${TIMEOUT}" -zv ${host} 2>&1)"
            rc=$?
            [ "${rc}" -ne "${expected_rc}" ] && echo "${error}" | sed -e 's,nc: ,,' > "${TMP_DIR}/${id}.ko.info";;
    esac

    # verity status and write files
    if [ "${rc}" -eq "${expected_rc}" ]; then
        echo "${name}" > "${TMP_DIR}/${id}.ok"
    else
        echo "${name}" > "${TMP_DIR}/${id}.ko"
    fi
}

# Verify requirements
command_exists 'curl'
command_exists 'nc'
command_exists 'ping'
mkdir -p "${TMP_DIR}" || exit 1

# Execute checks
id=0
while IFS="$(printf '\n')" read -r line; do
    check="$(get_element 1 "${line}")"
    code="$(get_element 2 "${line}")"
    name="$(get_element 3 "${line}")"
    host="$(get_element 4 "${line}")"
    check "${check}" "${host}" "${name}" "${code}" "${id}" &
    # : $((id++)) # works for bash
    id=$((id + 1)) # works for sh (ubuntu)
done < "${CHECKS_FILE}"
wait
OUTAGES_COUNT="$(ls "${TMP_DIR}/"*.ko | wc -l)"

# Generate HTML
cat << EOF
<!DOCTYPE html><html lang="en">
<head>
<link rel="icon" href="/favicon.png" type="image/png">
<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"><title>${TITLE}</title>
<style>
/* Global Styles */
body {
    font-family: 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Verdana, sans-serif;
    background-color: #f4f6f9;
    margin: 0;
    padding: 0;
    color: #333;
}

h1 {
    font-size: 2rem;
    text-align: center;
    color: #333;
    margin-top: 30px;
    margin-bottom: 20px;
}

ul {
    padding: 0;
}

li {
    list-style: none;
    margin-bottom: 10px;
    padding: 10px;
    border-bottom: 1px solid #ddd;
    transition: background-color 0.3s ease;
}

li:hover {
    background-color: #f1f3f5;
}

/* Container */
.container {
    max-width: 600px;
    width: 100%;
    margin: 0 auto;
    padding: 20px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Panels */
.panel {
    font-weight: bold;
    padding: 15px;
    border-radius: 5px;
    margin-bottom: 20px;
}

.failed-bg {
    color: white;
    background-color: #E25D6A;
}

.success-bg {
    color: white;
    background-color: #52B86A;
}

/* Status Indicators */
.status {
    float: right;
    font-weight: bold;
    text-transform: uppercase;
    border-radius: 3px;
    padding: 2px 6px;
}

.failed {
    color: #E25D6A;
}

.success {
    color: #52B86A;
}

/* Footer */
footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 15px;
    background-color: #f8f9fa;
    border-top: 1px solid #ddd;
    font-size: 0.9rem;
}

footer a {
    color: #007bff;
    text-decoration: none;
    margin-left: 15px;
    transition: color 0.3s ease;
}

footer a:hover {
    color: #0056b3;
}

/* Small text */
.small {
    font-size: 0.85rem;
    color: #666;
}

/* Responsive Design */
@media (max-width: 600px) {
    .container {
    padding: 15px;
    }

    footer {
    flex-direction: column;
    text-align: center;
    }

    footer a {
    margin-left: 0;
    margin-top: 10px;
    }
}
</style>
</head>
<body>
<div class='container'>
<h1>${HEADER}</h1>
EOF
if [ "${OUTAGES_COUNT}" -ne 0 ]; then
    echo "<ul><li class='panel failed-bg'>${OUTAGES_COUNT} Outage(s)</li></ul>"
else
    echo "<ul><li class='panel success-bg'>All Systems Operational</li></ul>"
fi
cat << EOF
<h1>Services</h1>
<ul>
EOF
for file in "${TMP_DIR}/"*.ko; do
    [ -e "${file}" ] || continue
    echo "<li>$(cat "${file}") <span class='small failed'>($(cat "${file}.info"))</span><span class='status failed'>Disrupted</span></li>"
done
for file in "${TMP_DIR}/"*.ok; do
    [ -e "${file}" ] || continue
    echo "<li>$(cat "${file}") <span class='status success'>Operational</span></li>"
done
cat << EOF
</ul>
<p class=small> Last check: $(date +%FT%T%z)</p>
EOF
if [ -f "${INCIDENTS_FILE}" ]; then
    echo '<h1>Incidents</h1>'
    if [ -s "${INCIDENTS_FILE}" ]; then
        sed 's|^\(.*\)$|<p>\1</p>|' "${INCIDENTS_FILE}"
    else
        echo '<p>No incident reported yet ;)</p>'
    fi
fi
cat <<EOF
</div>
</body>
<footer style="position: fixed; bottom: 0; left: 0; width: -webkit-fill-available; display: flex; justify-content: space-between; padding: 10px; background-color: #f8f9fa; font-family: Arial, sans-serif;">
  <div>
    <span>Â© 2024 Spencer Lepine</span>
    <a href="https://github.com/spencerlepine/status.spencerlepine.com" style="margin-left: 10px; text-decoration: none; color: #007bff;">Source Code</a>
    <a href="https://spencerlepine.com" style="margin-left: 10px; text-decoration: none; color: #007bff;">Homepage</a>
  </div>
  <div>
    <a href="https://blog.spencerlepine.com" style="margin-left: 10px; text-decoration: none; color: #007bff;">Blog</a>
    <a href="https://github.com/spencerlepine" style="margin-left: 10px; text-decoration: none; color: #007bff;">GitHub</a>
    <a href="https://www.linkedin.com/in/spencerlepine" style="margin-left: 10px; text-decoration: none; color: #007bff;">LinkedIn</a>
    <a href="https://x.com/spencerlepine" style="margin-left: 10px; text-decoration: none; color: #007bff;">X</a>
  </div>
</footer>
</html>
EOF

# Cleanup and exit
rm -r "${TMP_DIR}" 2>/dev/null
if "${OUTAGE_RC}"; then
    exit "${OUTAGES_COUNT}"
fi
